cps (64/120)

hush

let pat1 = "{0*2 ~ [12 ~] ~ 0*4 [~ 0] 0}%8"
    pat2 = "{[~ 0] 0 ~ 0 [~ 0] ~ 0}%8"
    pat3 = "{0 0*4 [~ 0] [~ 0] 0*2 0 ~ 0*4 ~ 0 -12 0 ~ [~ 0] [~ 0] ~ 0*2 -12}%8"
    pat4 = "{0 0*2 [~ 0] [~ 0] 0 0 -12 0*4 ~ 0 ~ 0 ~ [~ 0] [~ 0] ~ 0*2 -12}%8"
    pat5 = "{[~ 0] 0  0*2 ~ [~ 0] [~ 0] ~ 0 -12 0*4 ~ [~ 0] [~ 0] ~ 0*2 -12}%8"
    pat6 = "{~ 0 ~ 0 -12 0*4 0 0*2 0*4 ~ 0 -12 0*2 ~ [~ 0] [~ 0] ~ 0*2 -12}%8"

d2 silence

d1 $s "supersaw" #n "-36"
#sustain "2.0"
#gain "1.0"

d2
$sometimes (jux (iter 8))
$sometimes (jux (iter 2))
-- $sometimes (jux (rev))
-- $sometimes (rev)
$stack[
  s "myMoog(9,16,6)" #n "-12" #resonance "1.11 2.22 4.44 5.55 6.66",
  s "myMoog(3,16,3)" #n "0" #resonance "1.11 2.22 4.44 5.55 6.66",
  s "supersaw(7,16)" #n "-12",
  s "supersaw(3,16)" #n "-24"
]
#sustain "0.1"
#gain "0.75"
#delay "0.3" #delaytime "0.03 0.01 0.02" #delayfeedback "0.8"

d3
$whenmod 8 4 (jux (iter 8))
$whenmod 4 3 (rev)
$sound "{ifdrums(3, 16, 3), bd(5, 16, 2), glitch(5, 16)}"
#gain "1.5"
#n (irand 64)
#pan (rand)

d1
$whenmod 8 4 (jux (iter 4))
$whenmod 8 7 (jux (iter 8))
$sometimes (rev)
$sound "[bd [~ ifdrums] [~ bd] cp]*2"
#cutoff (scale 1500 18000 $slow 4 $rand) #resonance (scale 0.0 0.3 $ rand)
# n (irand 64) # pan (rand)

d3
$whenmod 8 4 (jux (iter 8))
$whenmod 4 3 (rev)
$sound "{ifdrums(3, 16, 3), bd(5, 16, 2), glitch(11, 16, 2)}"
#gain "1.5"
#n (irand 64)
#pan (rand)

d3
$ whenmod 8 6 (jux (iter 8))
$ whenmod 4 2 (jux (iter 4))
$ sound "{bd(3, 16, 0), ifdrums(3, 16, 5), glitch(3, 16, 5), bass(3, 16, 2), cp(3, 16, 3), dr55(3,16,4)}"
#gain "1.5"
# n (irand 64)
# pan (rand)

d2
-- $whenmod 4 3 (chop 16)
-- $whenmod 5 4 (gap 8)
$sometimes(jux (iter 16))
$sometimes(jux (iter 8))
$sometimes(jux (iter 4))
-- $sometimes(jux (rev))
$every 4 (rev)
$stack[
  --sound (samples "arpy(3,16,11)" (irand 17)) #up "-24",
  --sound (samples "arpy(7,16,9)" (irand 16)) #up "-12",
  --sound (samples "arpy(5,16,8)" (irand 15)) #up "24",
  --sound (samples "arpy(3,16,3)" (irand 14)) #up "0",
  --sound (samples "arpy(3,16,5)" (irand 13)) #up "5",
  --sound (samples "arpy(3,16)" (irand 12)) #up "12",
  --sound (samples "felld(3,16,12)" (irand 128)) #pan (rand),
  sound "fell2(5,16,5)" #pan (rand),
  sound "fell(5,16,11)" #pan (rand),
  --sound (samples "bass(3,16,2)" (irand 128)),
  --sound (samples "dr55(3,16,10)" (irand 128)) #pan (rand),
  --sound (samples "tr-808(3,16,8)" (irand 128)) #pan (rand),
  --sound (samples "casio(5,16,6)" (irand 128)) #pan (rand),
  sound (samples "glitch(3,16,5)" (irand 128)) #pan (rand),
  sound (samples "808bd(3,16,9)" (irand 128)),
  sound (samples "bd(3,16,3)" (irand 128)) #gain "1.2"
]
#n (irand 128)
#up "{7 0 -7 0 5 -12 0 12 0 7 0 -7 0 12}%16"
#cutoff (scale 800 10000 $slow 3 $rand) #resonance "0.2"
#delay "0.3" #delaytime "0.03 0.01 0.02" #delayfeedback "0.8"
#gain "1.5"
-- #vowel "o i a e i o e"
-- #delay "0.5" #delaytime "0.47" #delayfeedback "0.5"

d3
-- $ jux (iter 4)
-- $ jux (iter 8)
$ stack[
  sound (samples "fell*16?" (irand 6)) |+| speed "2.0 1.0 1.5" |+| vowel "a i u e o",
  up pat6 |=| sound "fell:2",
  up pat4 |=| sound "fell:3",
  up pat5 |=| sound "fell1",
  up pat3 |=| sound "fell1",
  up pat2 |=| sound "bd:1",
  up pat1 |=| sound "felld:1"     
]

d3
$ jux (iter 8)
$ stack[
 up pat2 |=| sound "bass:3 bass:1 bass:0 bass:2",
 sound (samples "fell*16?" (irand 6)) |+| speed "2.0 1.0 1.5",
 up pat5 |=| sound (samples "fell?" (irand 2)) |+| speed "2.0 1.0 1.5",
 up pat4 |=| sound "fell1" |+| speed "2.0 1.0 1.5 0.5",
 up pat2 |=| sound "909",
 up pat1 |=| sound "fell1"
]
-- # vowel "a [i u] [e o]"
|+| delay "0.5" |+| delaytime "0.01 0.02 0.03" |+| delayfeedback "0.5"
#cutoff (scale 800 18000 $slow 3 $sine1) #resonance "0.3"

d1
$ jux (iter 8)
$ every 2 (|+| coarse "24 16 32") 
$ stack[
  up pat2 |=| sound "909",
  up pat2 |=| sound "bass:2 bass:1 bass bass:3",       
  sound "atom:1" |+| speed "1.0 0.5" |+| gain "0.85",
  up pat1 |=| sound "atom",
  up pat5 |=| sound "atom:2"
]
-- |+| vowel "a i u e o"
-- |+| delay "0.5" |+| delaytime "0.01 0.02 0.03" |+| delayfeedback "0.5"

d1
$ jux (iter 4)
$ whenmod 8 7 (chop 16)
$ every 4 (|+| coarse "24 16 32")
$ stack[
  up pat2 |=| sound "909",
  sound "panda:0*16?" |+| speed "1.0 3.0 2.0 1.5",
  up pat4 |=| sound "panda:1 panda:2 panda" |+| speed "2.0 0.5",
  up pat5 |=| sound "atom:2",
  up pat3 |=| sound "panda:1 panda:2 panda" |+| speed "0.5 1.5 2.0"   
]
-- #gain "1.0"
-- #vowel "a i u e o"
-- |+| delay "0.75" |+| delaytime "0.02 0.03" |+| delayfeedback "0.25"
-- #room "1.0"

d2
-- $ jux (rev)
-- $ every 5 (|+| accelerate "[1 -1]*3")  
$ stack [
  sound (samples "flick*16?" (irand 6)) |+| speed "2.0 1.0 1.5 3.0",
  sound "bd:4*8" |+| gain "1.2",
  sound "[bd ~ ~ bd ~ ~ ~ bd]*2" |+| speed "0.75 1.0 0.5" |+| gain "1.2"
]
#gain "1.5"
-- #delay "0.8" #delaytime "0.47" #delayfeedback "0.75"

d2
$ every 2 (chop 8)
-- $ every 3 (gap 16)
$ brak
$ stack [
  jux (iter 4) $ sound "hc:3*16" |+| speed "1.0 2.0 1.5" |+| gain "0.75"
]

d3
$ jux (rev)
$ stack [
  sound (samples "flick*16?" (irand 6)) |+| speed "2.0 1.0 1.5 3.0",
  sound "bd:4*4",
  sound "[bd bd ~ bd ~ ~ ~ bd]*2" |+| speed "0.75 1.0 0.5"
]
#gain "1.5"

d4 $ stack [
 sound "gabba*4" |+| gain "1.25"
]

solo $d1
$ every 8 (|+| accelerate "[1 -1]*3")
$ whenmod 4 3 (jux (iter 4))
$ whenmod 8 5 (jux (iter 8))
$ stack [
sound (samples "sitar*4?" (irand 8)) |+| gain "1.0" |+| speed "1.5 1.0 0.5 0.25"
]
#room "0.8"

d2 $ every 8 (|+| accelerate "[1 -1]*3")
$ every 3 (gap 8)
$ whenmod 4 3 (jux (iter 4))
$ stack [
sound (samples "pluck*8?" (irand 17)) |+| gain "1.0",
  up pat3 |=| sound (samples "tabla*8?" (irand 26)) |+| gain "1.0",
  up pat4 |=| sound (samples "tabla2*8?" (irand 42)) |+| gain "1.0"
]

solo $d3 $ slow 32
$ striate' 1200 (1/32)
$ stack[
  sound "yano" |+| speed "0.52" |+| pan "0.5" |+| gain "0.5",       
  sound "yano" |+| speed "0.252" |+| pan "0.5" |+| gain "0.5",
  sound "yano" |+| speed "1.0" |+| pan "0.3" |+| gain "0.3",
  sound "yano" |+| speed "1.02" |+| pan "0.7" |+| gain "0.3"
]
|+| delay "0.9" |+| delaytime "0.25" |+| delayfeedback "0.95"
#gain "0.5"

hush

